  /* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/2788c8ff-181d-492b-b3bb-f66f8c82862e 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float maxPres;
  float maxTemp;
  float readingDensity;
  float readingPh;
  float readingPressure;
  float readingTemp;
  float setValuePres;
  float setValueTemp;
  bool boardSwitch;
  bool dashboardLight;
  bool sendEmailTest;
  bool surpassedMaxPres;
  bool surpassedMaxTemp;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <HardwareSerial.h>
HardwareSerial SerialPort(1); // use UART1

//Global Variable
char c;
String dataIn;

//non-intrusive delay
unsigned long previousMillis = 0;
const long interval = 1000; //milliseconds

//pin setup
int dashboardLightPin = 5;
int switchPin = 14;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(19200);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 
  
  SerialPort.begin(9600, SERIAL_8N1, 16, 17); //Rx receives, Tx transmits

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  /*
  
  
  
  // Define other variables
  pinMode(dashboardLightPin, OUTPUT);
  pinMode(switchPin, INPUT);

  readingDensity = 0;
  */
}

void loop() {
  ArduinoCloud.update();
  
  //to automatically reconnect if wifi is lost
  WiFi.setAutoReconnect(true);
  WiFi.persistent(true);
  
  
  //Write to Uno
  SerialPort.print("ESP32 says howdy \n");
  
  //Read from Uno
  while(SerialPort.available()) {
    c = SerialPort.read();
    
    if(c != '\n')
    {
      dataIn += c;
    } else {
      break;
    }
  }
  
  if (c=='\n')
  {
    Serial.println(dataIn);
    maxPres = dataIn.toFloat();
    c = 0;
    dataIn = "";
  }
  
  
  
  
  Serial.println("test");
  delay(500);
}





/*
  Since BoardSwitch is READ_WRITE variable, onBoardSwitchChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onBoardSwitchChange()  {
  // Add your code here to act upon BoardSwitch change
}

/*
  Since DashboardLight is READ_WRITE variable, onDashboardLightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onDashboardLightChange()  {
  // Add your code here to act upon DashboardLight change
  /*
  if (dashboardLight == true){
    digitalWrite(dashboardLightPin, HIGH);
  }
  if (dashboardLight == false){
    digitalWrite(dashboardLightPin, LOW);
  }
  */
}






/*
  Since MaxPres is READ_WRITE variable, onDashboardLightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMaxPresChange()  {
  // Add your code here to act upon SetValuePres change
}

/*
  Since MaxTemp is READ_WRITE variable, onDashboardLightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMaxTempChange()  {
  // Add your code here to act upon SetValuePres change
}

/*
  Since SurpassedMaxPres is READ_WRITE variable, onSurpassedMaxPresChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onSurpassedMaxPresChange()  {
  // Add your code here to act upon SurpassedMaxPres change
}

/*
  Since SurpassedMaxTemp is READ_WRITE variable, onSurpassedMaxTempChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onSurpassedMaxTempChange()  {
  // Add your code here to act upon SurpassedMaxTemp change
}

/*
  Since SetValuePres is READ_WRITE variable, onSetValuePresChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onSetValuePresChange()  {
  // Add your code here to act upon SetValuePres change
}

/*
  Since SetValueTemp is READ_WRITE variable, onSetValueTempChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onSetValueTempChange()  {
  // Add your code here to act upon SetValueTemp change
}

/*
  Since SendEmailTest is READ_WRITE variable, onSendEmailTestChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onSendEmailTestChange()  {
  // Add your code here to act upon SendEmailTest change
}


